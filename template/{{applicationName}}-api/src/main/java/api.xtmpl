{####
iterator {
    xlbean.entities
}
output {
    dir {
        apiPackage.replaceAll('\\.', '/')
    }
    filename {
        apiClass + ".java"
    }
}

####}
{% import "macros.txt" %}
package {{apiPackage}};

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import {{daoPackage}}.{{daoClass}};
import {{javaPackage}}.{{javaClass}};

@RestController
@RequestMapping(path="{{apiUrl}}")
public class {{apiClass}} {

    @Autowired
    private {{daoClass}} dao;

    @RequestMapping(path = "", method = RequestMethod.GET)
    public List<{{javaClass}}> getList({{parentKeyFields(_it, true, true)}}{{parentKeys.size > 0 ? ',' : ''}} 
            @RequestParam(required = false) Integer offset,
            @RequestParam(required = false) Integer limit) {
        if (offset == null) {
            offset = 0;
        }
        if (limit == null) {
            limit = 100;
        }
        return dao.selectList({{parentKeyFields(_it, false, false)}}{{parentKeys.size > 0 ? ', ' : ''}}offset, limit);
    }

    @RequestMapping(path = "{{apiUrlKeyFields(_it)}}", method = RequestMethod.GET)
    public {{javaClass}} getOne({{keyFields(_it, true, true)}}) {
        return dao.selectOne({{keyFields(_it, false, false)}});
    }

    @RequestMapping(path = "", method = RequestMethod.POST)
    @Transactional
    public {{javaClass}} create(@RequestBody {{javaClass}} object) {
        return dao.insert(object, true);
    }

    @RequestMapping(path = "{{apiUrlKeyFields(_it)}}", method = RequestMethod.PUT)
    @Transactional
    public {{javaClass}} upsert({{keyFields(_it, true, true)}}, @RequestBody {{javaClass}} object) {
        object.updateKey({{keyFields(_it, false, false)}});
        return dao.upsert(object);
    }

    @RequestMapping(path = "{{apiUrlKeyFields(_it)}}", method = RequestMethod.DELETE)
    public void delete({{keyFields(_it, true, true)}}) {
        dao.delete({{keyFields(_it, false, false)}});
    }
}

{##}
